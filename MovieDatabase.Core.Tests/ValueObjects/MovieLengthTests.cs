using MovieDatabase.Core.Exceptions;
using MovieDatabase.Core.ValueObjects;
using NUnit.Framework;
using Shouldly;

namespace MovieDatabase.Core.Tests.ValueObjects;

[TestFixture]
public class MovieLengthTests
{
    [TestCase(80)]
    [TestCase(82)]
    [TestCase(85)]
    [TestCase(87)]
    [TestCase(90)]
    [TestCase(92)]
    [TestCase(95)]
    [TestCase(98)]
    [TestCase(100)]
    [TestCase(102)]
    [TestCase(105)]
    [TestCase(108)]
    [TestCase(110)]
    [TestCase(112)]
    [TestCase(115)]
    [TestCase(117)]
    [TestCase(120)]
    [TestCase(122)]
    [TestCase(125)]
    [TestCase(128)]
    [TestCase(130)]
    [TestCase(132)]
    [TestCase(135)]
    [TestCase(138)]
    [TestCase(140)]
    [TestCase(142)]
    [TestCase(145)]
    [TestCase(147)]
    [TestCase(150)]
    [TestCase(152)]
    [TestCase(155)]
    [TestCase(157)]
    [TestCase(160)]
    [TestCase(162)]
    [TestCase(165)]
    [TestCase(167)]
    [TestCase(170)]
    [TestCase(172)]
    [TestCase(175)]
    [TestCase(177)]
    [TestCase(180)]
    [TestCase(182)]
    [TestCase(185)]
    [TestCase(187)]
    [TestCase(190)]
    [TestCase(192)]
    [TestCase(195)]
    [TestCase(197)]

    public void ProperValuesShouldCreateMovieLength(int lengthInMinutes)
    {
        var movieLength = new MovieLength(lengthInMinutes);
        
        movieLength.Value.ShouldBe(lengthInMinutes);
    }
    
    [TestCase(0)]
    [TestCase(-1)]
    [TestCase(-2)]
    [TestCase(-3)]
    [TestCase(-4)]
    [TestCase(-5)]
    [TestCase(-6)]
    [TestCase(-7)]
    [TestCase(-8)]
    [TestCase(-9)]
    [TestCase(-10)]
    [TestCase(-11)]
    [TestCase(-12)]
    [TestCase(-13)]
    [TestCase(-14)]
    [TestCase(-15)]
    [TestCase(-16)]
    [TestCase(-17)]
    [TestCase(-18)]
    [TestCase(-19)]
    [TestCase(-20)]
    [TestCase(-21)]
    [TestCase(-22)]
    [TestCase(-23)]
    [TestCase(-24)]
    [TestCase(-25)]
    [TestCase(-26)]
    [TestCase(-27)]
    [TestCase(-28)]
    [TestCase(-29)]
    [TestCase(-30)]
    [TestCase(-31)]
    [TestCase(-32)]
    [TestCase(-33)]
    [TestCase(-34)]
    [TestCase(-35)]
    [TestCase(-36)]
    [TestCase(-37)]
    [TestCase(-38)]
    [TestCase(-39)]
    [TestCase(-40)]
    [TestCase(-41)]
    [TestCase(-42)]
    [TestCase(-43)]
    [TestCase(-44)]
    [TestCase(-45)]
    [TestCase(-46)]
    [TestCase(-47)]
    [TestCase(-48)]
    [TestCase(-49)]
    [TestCase(-50)]
    public void LowerOrEqualZeroValuesShouldThrowInvalidMovieLengthException(int lengthInMinutes)
    {
        Should.Throw<InvalidMovieLengthException>(() => new MovieLength(lengthInMinutes));
    }
}