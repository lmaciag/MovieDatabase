// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieDatabase.Core.Enums;
using MovieDatabase.Infrastructure;

#nullable disable

namespace MovieDatabase.Infrastructure.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20231204175233_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieDatabase.Core.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BoxOffice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<MovieGenreEnum>("Genre")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieDatabase.Core.Entities.MovieActor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("146effe4-49d6-4ffc-948c-c566cfc64843"),
                            FirstName = "Bruce",
                            LastName = "Willis"
                        },
                        new
                        {
                            Id = new Guid("adea0690-9f31-4d69-a2bb-a2183cf156e5"),
                            FirstName = "John",
                            LastName = "Travolta"
                        },
                        new
                        {
                            Id = new Guid("f2c16575-06b5-405c-add4-25256d5efa95"),
                            FirstName = "Samuel L.",
                            LastName = "Jackson"
                        },
                        new
                        {
                            Id = new Guid("947a99ac-592e-4a21-bbff-f12ff61826f6"),
                            FirstName = "Uma",
                            LastName = "Thurman"
                        },
                        new
                        {
                            Id = new Guid("38bfd380-187c-4448-82a4-f208ef032b6e"),
                            FirstName = "Colin",
                            LastName = "Farrell"
                        },
                        new
                        {
                            Id = new Guid("7dc4bf77-61bc-4579-abf1-4d064dce0ed3"),
                            FirstName = "Brendan",
                            LastName = "Gleeson"
                        },
                        new
                        {
                            Id = new Guid("301011d6-1c02-4d2d-9940-6a0fa45c6f76"),
                            FirstName = "Leonardo",
                            LastName = "DiCaprio"
                        },
                        new
                        {
                            Id = new Guid("f923c19b-50e4-444a-8dfc-bc490000d1c1"),
                            FirstName = "Robert",
                            LastName = "De Niro"
                        },
                        new
                        {
                            Id = new Guid("88dcbc82-cbc4-4eb9-9739-9a7b74902fd7"),
                            FirstName = "Jesse",
                            LastName = "Plemons"
                        },
                        new
                        {
                            Id = new Guid("45dd20db-823b-4e96-bba4-d7fc36783d18"),
                            FirstName = "Michael",
                            LastName = "Keaton"
                        },
                        new
                        {
                            Id = new Guid("4b124488-270d-4a06-9003-dc9a1787b55d"),
                            FirstName = "Zach",
                            LastName = "Galifianakis"
                        },
                        new
                        {
                            Id = new Guid("1a55dcfb-a1d3-45ff-ae58-e621e2a424ad"),
                            FirstName = "Edward",
                            LastName = "Norton"
                        },
                        new
                        {
                            Id = new Guid("d33fed2e-7e98-4414-8826-ead5f473dd7a"),
                            FirstName = "Emma",
                            LastName = "Stone"
                        },
                        new
                        {
                            Id = new Guid("0a3abde0-f162-4db2-a7e7-5643f1d58b4d"),
                            FirstName = "Ryan",
                            LastName = "Gosling"
                        },
                        new
                        {
                            Id = new Guid("3c7f7291-af01-4187-bd01-3571fc9886df"),
                            FirstName = "Harrison",
                            LastName = "Ford"
                        },
                        new
                        {
                            Id = new Guid("23935d7f-ec38-40d9-9128-2b1bc976205f"),
                            FirstName = "Rutger",
                            LastName = "Hauer"
                        },
                        new
                        {
                            Id = new Guid("f6a21b06-4d74-46f6-8bd5-54a16fdf074b"),
                            FirstName = "Sean",
                            LastName = "Young"
                        },
                        new
                        {
                            Id = new Guid("ff25b94c-dd14-4dc4-8e93-9c8636ce92db"),
                            FirstName = "Kate",
                            LastName = "Winslet"
                        },
                        new
                        {
                            Id = new Guid("daed329f-1278-4d62-86b1-28e515c7c476"),
                            FirstName = "Brad",
                            LastName = "Pitt"
                        },
                        new
                        {
                            Id = new Guid("0da5afee-318b-41ac-ba1e-f8cfff666dd9"),
                            FirstName = "Bradley",
                            LastName = "Cooper"
                        });
                });

            modelBuilder.Entity("MovieDatabase.Core.Entities.MovieDirector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64c3c179-2924-48c9-a521-d4e936588fcc"),
                            FirstName = "Ridley",
                            LastName = "Scott"
                        },
                        new
                        {
                            Id = new Guid("bfbd87c3-4fdc-477d-8d25-fb43c7e0f3cc"),
                            FirstName = "Quentin",
                            LastName = "Tarantino"
                        },
                        new
                        {
                            Id = new Guid("d8fe0aab-36c2-4a8b-ae50-9230bc84216e"),
                            FirstName = "Martin",
                            LastName = "Scorsese"
                        },
                        new
                        {
                            Id = new Guid("8c0c48df-4010-4819-90d5-5a9c676052c2"),
                            FirstName = "Martin",
                            LastName = "McDonagh"
                        },
                        new
                        {
                            Id = new Guid("6a86a3d1-8778-4b23-b774-12a32a9c09d3"),
                            FirstName = "James",
                            LastName = "Cameron"
                        },
                        new
                        {
                            Id = new Guid("e1d8672d-2472-4582-9b7d-0f61d6bb841a"),
                            FirstName = "Alejandro G.",
                            LastName = "Inarritu"
                        },
                        new
                        {
                            Id = new Guid("e1be7b21-c0c9-4559-9276-7bb290796c4c"),
                            FirstName = "Damien",
                            LastName = "Chazelle"
                        },
                        new
                        {
                            Id = new Guid("7d6d7422-343f-4a01-83e4-7f994c89751f"),
                            FirstName = "Francis",
                            LastName = "Ford Coppola"
                        });
                });

            modelBuilder.Entity("MovieMovieActor", b =>
                {
                    b.Property<Guid>("ActorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ActorsId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieMovieActor");
                });

            modelBuilder.Entity("MovieDatabase.Core.Entities.Movie", b =>
                {
                    b.HasOne("MovieDatabase.Core.Entities.MovieDirector", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("MovieMovieActor", b =>
                {
                    b.HasOne("MovieDatabase.Core.Entities.MovieActor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieDatabase.Core.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
